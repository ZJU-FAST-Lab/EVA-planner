<launch>
  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="z" default="0.4" />
  <arg name="yaw" default="0" />
  <arg name="world_filepath" default="$(find jackal_gazebo)/worlds/jackal_race_top_down.world" />

  <arg name="map_frame" default="map" />

  <arg name="lidar_frame" default="ouster_lidar" />

  <arg name="scan_topic" default="front/scan"/>
  <arg name="costmap_planning_obstacle_ub" default="19"/>
  <arg name="costmap_planning_upper_bound" value="5"/>
  <arg name="costmap_planning_unknown" value="3"/>

  <arg name="gazebo_odom_topic" default="/gazebo_p3d/odom" />
  <arg name="ctrl_odom_topic" value="$(arg gazebo_odom_topic)"/>

  <!-- Launch Gazebo with the specified world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="0" />
    <arg name="gui" value="false" />
    <arg name="use_sim_time" value="true" />
    <arg name="world_name" value="$(arg world_filepath)" />
  </include>

  <!-- Configuration of Jackal which you would like to simulate. See jackal_description for details. -->
  <!-- Spawn Jackal -->
  <include file="$(find jackal_gazebo)/launch/spawn_jackal.launch">
    <arg name="x" value="$(arg x)" />
    <arg name="y" value="$(arg y)" />
    <arg name="z" value="$(arg z)" />
    <arg name="yaw" value="$(arg yaw)" />
    <arg name="config" value="front_laser" />
    <arg name="joystick" value="false" /> <!-- Optionally enable teleop for the simulation -->
    <arg name="keyboard" default="false" />
    <arg name="enable_ekf" default="false" />
  </include>


  <node pkg="tf2_ros" type="static_transform_publisher" name="map_odom_transformer"
      args="0 0 0 0 0 0 1 map odom"/>

  <!-- complete TF tree, must be consistent with jackal.gazebo p3d setting-->
  <node pkg="gazebo_p3d_utils" type="p3d_link_tf" name="link_map_to_base_link"  output="screen">
    <remap from="~input" to="$(arg gazebo_odom_topic)"/>
  </node>

  <!-- slam hector as mapping and localization does not use external odom-->
  <include file="$(find jackal_gazebo)/launch/jackal_hector_map.launch">
    <arg name="scan_topic" value="$(arg scan_topic)" />
    <arg name="map_size" value="255" />
    <arg name="map_resolution" value="0.1" />
    <arg name="map_frame" value="$(arg map_frame)" />
    <arg name="map_start_x" value="0.5"/>
    <arg name="map_start_y" value="0.5"/>
    <arg name="map_pub_period" value="0.05"/>
  </include>

  <!-- main node -->
  <node pkg="plan_manage" name="adaptive_planner_node" type="adaptive_planner_node" output="screen">

    <param name="fsm/safety_dist" value="0.1"/>

    <!-- Astar path searching -->
    <param name="astar/resolution_astar" value="0.1"    type="double"/>
    <param name="astar/margin"           value="0.3"    type="double"/>
    <param name="astar/local_margin"     value="10.0"   type="double"/>
    <param name="astar/lambda_heu"       value="5.0"    type="double"/>
    <param name="astar/allocate_num"     value="1000000" type="int"/>

    <!-- Multi MPCC planning -->
    <param name="odom_topic" value="$(arg gazebo_odom_topic)" />
    <param name="multi_mpcc/Ts"                 value="0.05" type="double"/>
    <param name="multi_mpcc/Mpcc_opt"           value="0.01" type="double"/>
    <param name="multi_mpcc/show_lowmpc_time"   value="false"/>
    <param name="multi_mpcc/show_highmpcc_time" value="false"/>

    <!-- Low MPC -->
    <param name="low_mpc/alpha_s" value="5.0" type="double"/>
    <param name="low_mpc/alpha_p" value="2.0"   type="double"/>
    <param name="low_mpc/alpha_e" value="1.0"   type="double"/>

    <param name="low_mpc/max_iteration_num"   value="100"   type="int"/>
    <param name="low_mpc/max_iteration_time"  value="0.3"  type="double"/>
    <param name="low_mpc/similary_upper_"     value="0.5"   type="double"/>
    <param name="low_mpc/similary_lower_"     value="-0.5"  type="double"/>
    <param name="low_mpc/dist_0"             value="0.7" type="double"/>

    <param name="gridmsg_obstacle_lower_bound" value="80"/>
    <param name="gridmsg_obstacle_upper_bound" value="100"/>
    <param name="gridmsg_unknown" value="-1"/>

    <param name="costmap_planning_robot_inscribed_radius" value="0.215"/>
    <param name="costmap_planning_gamma" value="7.0"/>
    <param name="costmap_planning_unknown" value="$(arg costmap_planning_unknown)"/>
    <param name="costmap_planning_lethal" value="$(arg costmap_planning_obstacle_ub)"/>
    <param name="costmap_planning_inscribed" value="$(eval arg('costmap_planning_obstacle_ub') - 1)"/>
    <param name="costmap_planning_inscribed" value="$(arg costmap_planning_obstacle_ub)"/>
    <param name="costmap_planning_cutoff_cost" value="$(arg costmap_planning_upper_bound)"/>

    <param name="costmap_visualization_unknown" value="-1"/>
    <param name="costmap_visualization_lethal" value="100"/>
    <param name="costmap_visualization_inscribed" value="99"/>
    <param name="costmap_visualization_planning_cutoff" value="-3"/>
    <param name="costmap_visualization_zero_cost" value="0"/>
  </node>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find plan_env)/rviz/test.rviz" />

</launch>
